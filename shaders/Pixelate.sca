#import <utils>
#import <color_spaces>

float sround(float value, float segments) {
  return floor(value * segments) / segments;
}

vec4 main(std::Texture2d viewTex, std::Texture2d segment, float segments, float inv) {
  vec2 screen = std::getRenderTargetSize();
  float aspect = screen.y / screen.x;

  vec2 uv = fragment(std::getVertexTexCoord());
  vec2 seg = vec2(
    sround(uv.x, segments),
    sround(uv.y, segments * aspect)
  );

  float mask = abs(inv - round(segment.sample(seg).w));

  vec4 color = viewTex.sample(uv);
  vec4 pixel = viewTex.sample(seg);

  vec3 hsl = std::rgbToHsl(pixel.xyz);
  hsl.z = sround(hsl.z, 12.0);
  pixel = vec4(std::hslToRgb(hsl), pixel.w);

  return mix(color, pixel, mask);
}
