#import <utils>

float sround(float value, float segments) {
  return floor(value * segments) / segments;
}

vec4 main(std::Texture2d maskTex, std::Texture2d viewTex, float segments, float fore, float back) {
  vec2 screen = std::getRenderTargetSize();
  float aspect = screen.y / screen.x;

  vec2 uv = fragment(std::getVertexTexCoord());
  vec2 seg = vec2(
    sround(uv.x, segments),
    sround(uv.y, segments * aspect)
  );

  float mask = ceil(maskTex.sample(seg).w);

  vec4 color = viewTex.sample(uv);
  vec4 pixel = viewTex.sample(seg);

  vec4 foreColor = mix(color, pixel, fore) * mask;
  vec4 backColor = mix(color, pixel, back) * (1.0 - mask); 

  return foreColor + backColor;
}
